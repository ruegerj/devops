---
- name: Get Helm installed version
  ansible.builtin.command: helm version --short
  register: helm_version_output
  changed_when: false
  ignore_errors: true

# Install Helm only if:
# 1. Helm is not installed (rc != 0)
# 2. OR the installed version differs from helm_version
- name: Download Artifact only if needed
  when: helm_version_output.rc != 0 or (helm_version not in helm_version_output.stdout) 
  block:
    - name: Download Helm archive
      ansible.builtin.get_url:
        url: "https://get.helm.sh/helm-{{ helm_version }}-{{ helm_os }}-{{ helm_arch }}.tar.gz"
        dest: "/tmp/helm-{{ helm_version }}.tar.gz"
        mode: "0644"

    - name: Extract Helm binary
      ansible.builtin.unarchive:
        src: "/tmp/helm-{{ helm_version }}.tar.gz"
        dest: "/tmp"
        remote_src: true

    - name: Install Helm binary
      ansible.builtin.copy:
        src: "/tmp/{{ helm_os }}-{{ helm_arch }}/helm"
        dest: "{{ helm_install_dir }}/helm"
        mode: "0755"
        remote_src: true
      become: true

    - name: Clean up Helm archive
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/helm-{{ helm_version }}.tar.gz"
        - "/tmp/{{ helm_os }}-{{ helm_arch }}"

    - name: Verify Helm installation
      ansible.builtin.command: helm version --short
      changed_when: false